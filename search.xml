<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[HTML5前端性能优化-页面预加载]]></title>
      <url>https://wiestlee.github.io/2017/03/18/tags-%20%20%5BHTML%5D-1/</url>
      <content type="html"><![CDATA[<p>当提到前端性能优化时，我们首先会联想到文件的合并、压缩，文件缓存和开启服务器端的 gzip压缩等，这使得页面加载更快。<br>现在，有很多已知的技术都可以让你的网站速度变得更快：使用CSS sprites，使用图片优化工具，使用.htaccess设置页面头信息和缓存时间，JavaScript压缩，使用CDN等。而在HTML5里，出现了一个新的用来优化网站速度的新功能：页面资源预加载/预读取(Link prefetch)。</p>
<h3 id="什么是资源预加载："><a href="#什么是资源预加载：" class="headerlink" title="什么是资源预加载："></a>什么是资源预加载：</h3><blockquote>
<p>预加载是浏览器对将来可能被使用资源的一种暗示，一些资源可以在当前页面使用到，一些可能在将来的某些页面中被使用。作为开发人员，我们比浏览器更加了解我们的应用，所以我们可以对我们的核心资源使用该技术。</p>
</blockquote>
<p>简单说来就是：让浏览器预先加载用户访问当前页后极有可能访问的其他资源(页面，图片，视频等)。</p>
<h4 id="HTML5页面资源预加载-Link-prefetch-写法"><a href="#HTML5页面资源预加载-Link-prefetch-写法" class="headerlink" title="HTML5页面资源预加载(Link prefetch)写法"></a>HTML5页面资源预加载(Link prefetch)写法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 预加载整个页面 --&gt;</div><div class="line">&lt;link rel=&quot;prefetch&quot; href=&quot;http://www.webhek.com/misc/3d-album/&quot; /&gt;</div><div class="line"></div><div class="line">&lt;!-- 预加载一个图片 --&gt;</div><div class="line">&lt;link rel=&quot;prefetch&quot; href=&quot; http://www.webhek.com/wordpress/</div><div class="line">wp-content/uploads/2014/04/b-334x193.jpg &quot; /&gt;</div></pre></td></tr></table></figure>
<p><strong><em> HTML5页面资源预加载/预读取(Link prefetch)功能是通过Link标记实现的，将rel属性指定为“prefetch”，在href属性里指定要加载资源的地址。火狐浏览器里还提供了一种额外的属性支持： </em></strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;link rel=&quot;prefetch alternate stylesheet&quot; </div><div class="line">title=&quot;Designed for Mozilla&quot; href=&quot;mozspecific.css&quot; /&gt;</div><div class="line">&lt;link rel=&quot;next&quot; href=&quot;2.html&quot; /&gt;</div></pre></td></tr></table></figure></p>
<h3 id="什么情况下应该预加载页面资源"><a href="#什么情况下应该预加载页面资源" class="headerlink" title="什么情况下应该预加载页面资源"></a>什么情况下应该预加载页面资源</h3><p>在你的页面里加载什么样的资源，什么时候加载，这完全取决于你。下面是一些建议：</p>
<blockquote>
<ul>
<li>当页面有幻灯片类似的服务时，预加载/预读取接下来的1-3页和之前的1-3页。</li>
<li>预加载那些整个网站通用的图片。</li>
<li>预加载网站上搜索结果的下一页。</li>
</ul>
</blockquote>
<h3 id="页面资源预加载-Link-prefetch-注意事项"><a href="#页面资源预加载-Link-prefetch-注意事项" class="headerlink" title="页面资源预加载(Link prefetch)注意事项"></a>页面资源预加载(Link prefetch)注意事项</h3><p>下面是一些关于页面资源预加载(Link prefetch)的注意事项：</p>
<blockquote>
<ul>
<li>预加载(Link prefetch)不能跨域工作，包括跨域拉取cookies。</li>
<li>预加载(Link prefetch)会污染你的网站访问量统计，因为有些预加载到浏览器的页面用户可能并未真正访问。</li>
</ul>
</blockquote>
]]></content>
      
        
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HTML全局属性]]></title>
      <url>https://wiestlee.github.io/2017/03/18/tags-%20%20%5BJavaScript%5D-3/</url>
      <content type="html"><![CDATA[<p>HTML 定义了少量的属性，这些属性适用于所有的HTML elements，这些属性可以用在所有的element中，尽管有些属性对一些element没什么作用。</p>
<h3 id="accesskey"><a href="#accesskey" class="headerlink" title="accesskey"></a>accesskey</h3><p>这个属性提供了一种使用快捷键访问当前元素的途径。它是用一个字符（单个Unicode code）列表的独立规范构成。浏览器应该使用键盘的第一布局。</p>
<h3 id="class"><a href="#class" class="headerlink" title="class"></a>class</h3><p>这个属性是一个element的class的独立规范列表。class允许css和javascript通过class选择器或者类似下面的DOM方法来选择和访问element<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Document.getElementsByClassName(&quot;className&quot;);</div></pre></td></tr></table></figure></p>
<h3 id="contenteditable"><a href="#contenteditable" class="headerlink" title="contenteditable"></a>contenteditable</h3><p>HTML5 :这个可枚举的属性表示这个<strong><em>element可以被用户编辑</em></strong>。如果是这样，浏览器会修改widget让它允许编辑。这个属性必须拥有以下值中的其中一个：</p>
<blockquote>
<ul>
<li>true 或者空字符串,表明这个element可编辑;</li>
<li>false, 表明这个element一定不能被编辑.</li>
</ul>
</blockquote>
<p>如果这个属性没有被设置，他的默认值会继承他父element的。<br><strong>使用说明: 这个属性是一个可枚举的属性，而不是一个布尔属性。这意味着true,false或空字符串的显式使用是强制的正确使用方式是：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;div contenteditable=&quot;true&quot;&gt;Example Label&lt;/div&gt;</div></pre></td></tr></table></figure></p>
<h3 id="data"><a href="#data" class="headerlink" title="data-*"></a>data-*</h3><p>HTML5 这类的属性，被称为自定义属性，允许HTML与和它对应DOM表现形式之间的专有信息交换，这或许对script来说有用。这样被设置了这个属性的element就可以通过的HTMLElement的接口访问所有的自定义数据。HTMLElement.dataset属性提供了访问它们的权限。<br><strong><em> </em>可以被任何符合以下限制的the producton rule of xml names(xml的命名规则)代替：*</strong></p>
<blockquote>
<ul>
<li>名字不能以xml开头，除此之外其他任何情形都可是使用这3个字母； </li>
<li>名字不能含有分号；</li>
<li>名字不能含有大写字母。</li>
</ul>
</blockquote>
<p><strong><em> 注意：HTMLElement.dataset是一个 StringMap。一个名叫data-test-value的自定义属性可以通过HTMLElment.dataset.testValue来访问，属性的名字中的中线(U+002D)被挨着它字母的大写字母代替了（驼峰命名） </em></strong></p>
<h3 id="dir"><a href="#dir" class="headerlink" title="dir"></a>dir</h3><p>这个可枚举属性表明element的文本方向。它可以有以下值：</p>
<blockquote>
<ul>
<li>ltr, left to right，适用于从左向右写的语言（比如：英语）；</li>
<li>rtl, right to left，适用于从右向左写的语言（比如：阿拉伯语）</li>
<li>auto, 由代理决定。用一个最基础的算法来解析element中的字符，如果发现有一个字符具有很强的方向性，那么就把这个方向作为整个element的方向。<h3 id="draggable"><a href="#draggable" class="headerlink" title="draggable"></a>draggable</h3>这个可枚举的属性决定一个element是否能够被拖动，可以使用Drag and Drop API。它的能使用的值如下：</li>
<li>true, 表示这个element可以被拖动</li>
<li>false, 表示这个值不可以被拖动</li>
</ul>
</blockquote>
<p>如果这个属性没有被设置，默认是auto,这就意味着它的行为默认由浏览器定义。<br><strong><em> 这个属性是一个可枚举的属性，但不是一个布尔类型属性。这意味着显式使用true 或flase其中之一是强制性的，像这样的简写<label draggable="">Example Label</label>是不允许的。正确用法是<label draggable="true">Example Label</label>。 </em></strong></p>
<h3 id="dropzone"><a href="#dropzone" class="headerlink" title="dropzone"></a>dropzone</h3><p> 这个可枚举的属性决定丢到一个element上的内容类型，可以使用的Drag and Drop API。它能够使用的值如下：</p>
<blockquote>
<ul>
<li>copy, 表示丢放时会创建一个被拖拽element的副本；</li>
<li>move, 表示被拖拽的element被移动到这个新位置；</li>
<li>link, 将会给拖拽的数据（dragged data）创建一个链接；<h3 id="hidden"><a href="#hidden" class="headerlink" title="hidden"></a>hidden</h3>这个布尔（Boolean）属性表示element还没有或是不再存在，当然这都是相对的。例如，你经常在页面上使用隐藏element,只有在登录处理完成后才可以被使用。浏览器不渲染这样的element。<h3 id="id"><a href="#id" class="headerlink" title="id"></a>id</h3>这个属性是唯一的标识，它在整个document里应该是唯一的。当需要链接（使用片段标识符，锚点），执行脚本，控制样式时，可以用它来定位识别元素。<h3 id="lang"><a href="#lang" class="headerlink" title="lang"></a>lang</h3>这个属性用于定义element的语言。不管这个element能不能够被编辑，都应该写上这个属性。这个标签包含单个条目值，它的格式规范定义在 Tags for Identifying Languages (BCP47)(BCP47)IETF 文档中。如果标签的内容是空字符串，那么语言就会被设置为unknown；如果标签的内容是无效的，它就被设置为 invalid<h3 id="spellcheck"><a href="#spellcheck" class="headerlink" title="spellcheck"></a>spellcheck</h3>这个可枚举的属性定义element是否检查拼写错误。它的值可以是以下：</li>
<li>true, 表示如果可能的话，element应该被检查拼写错误；</li>
<li>false, 表示element不应该检查拼写错误；</li>
</ul>
</blockquote>
<p>如果这个属性没有被设置，他默认的值是element的类型以及浏览器定义的。它也可能是 inherited,这意味着element的元素内容将被检查拼写错误，如果离它最近的祖先元素有spellcheck并且值为true。<br><strong><em> 这个属性是可枚举的，不是一个布尔属性。这意味着显式使用true 或 false 其中之一是强制性的。这样简写<label spellcheck="">Example Label</label> 是不允许的。这确的写法应该是<label spellcheck="true">Example Label</label>。<br>对于浏览器来说，这个属性只是一个提示，浏览器并不需要能够去验证拼写错误。通常不可编辑的element是不检查拼写错误的，即使spellcheck的值是true并且浏览器也支持拼写检查。 </em></strong></p>
<h3 id="style"><a href="#style" class="headerlink" title="style"></a>style</h3><p>这个属性包含CSS样式声明，被应用到元素上。注意推荐将它定义在其他文件里。这个属性和<style>element主要的目的是快速编写样式，例如用来测试想要的效果。</p>
<h3 id="tabindex"><a href="#tabindex" class="headerlink" title="tabindex"></a>tabindex</h3><p>这个整数类型的属性决定element是否可以获得焦点，如果它参与到排序的键盘导航，就可以定位它。它可能需要几个值：</p>
<blockquote>
<ul>
<li>负数意味这element不可以获得焦点，也不可以通过排序的键盘导航到达；</li>
<li>0意味着element可以通过排序的键盘导航到达，但是相对顺序取决于平台惯例；</li>
<li>一个正数意味着可以通过排序的键盘导航获得焦点并到达。相对顺序去决议该属性的值，按照tabindex的增值排序。如果几个element有相同的tabindex,他们的相对顺序取决于他们在document中的位置。</li>
</ul>
</blockquote>
<p>在排序的键盘导航单上，如果一个元素的tabindex的值是一个0或者无效值或没有该属性，那么它应该被放在值是正数的element后边。</p>
<h3 id="title"><a href="#title" class="headerlink" title="title"></a>title</h3><p>这个属性包含的的是文本信息，这信息代表element自己包含的内容的公告。这样的信息一般会包含，但是不是必要的，作为用户一个提示工具。这是几个关于这个属性的用法：</p>
<blockquote>
<ul>
<li>Link: 关于被链接文档的一个标题或一段描述；</li>
<li>和图片类似的媒体element:一段描述或相关的可信度；</li>
<li>Paragraph: 脚注活评论；</li>
<li>Quotation: 关于作者等一些信息。</li>
</ul>
</blockquote>
<p>如果这个属性清除了，这意味着离它最近的祖先元素的title和它相关（能够相应地成为这个元素的提示工具）。如果这个属性是空字符串，这很明显的表示离它最近的父元素的title和它没关系（不能作为这个元素的提示工具）。</p>
<h3 id="translate"><a href="#translate" class="headerlink" title="translate"></a>translate</h3><p>这是一个可枚举的属性，用于确定当页面进行本地化(localized)时，元素的属性值以及元素的文本(Text)子节点中的内容是否要进行翻译。其可取的值如下：</p>
<blockquote>
<ul>
<li>空字符串(empty)或者 “yes”，表示这个元素相关的内容将会被翻译</li>
<li>“no”，表示这个元素相关的内容不会被翻译<br>这篇文章有帮助吗？</li>
</ul>
</blockquote>
</style></p>]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[点击页面空白处，弹窗消失的实现方法]]></title>
      <url>https://wiestlee.github.io/2017/03/13/tags-%5Bjavascript%5D-2/</url>
      <content type="html"><![CDATA[<h3 id="在浏览网页时，经常看到这样一个效果，当我们点击一个链接时，会弹出一个弹窗或弹出一个模块，当点击页面空白处（不包含弹窗模块部分），弹窗会消失。"><a href="#在浏览网页时，经常看到这样一个效果，当我们点击一个链接时，会弹出一个弹窗或弹出一个模块，当点击页面空白处（不包含弹窗模块部分），弹窗会消失。" class="headerlink" title="在浏览网页时，经常看到这样一个效果，当我们点击一个链接时，会弹出一个弹窗或弹出一个模块，当点击页面空白处（不包含弹窗模块部分），弹窗会消失。"></a>在浏览网页时，经常看到这样一个效果，当我们点击一个链接时，会弹出一个弹窗或弹出一个模块，当点击页面空白处（不包含弹窗模块部分），弹窗会消失。</h3><p>下面是在stackoverflow上看到的，比较简单的实现：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$(document).click(function(e)&#123;</div><div class="line">  var target_area = $(&quot;目标区域&quot;);//设置目标区域</div><div class="line">  if(!target_area.is(e.target)&amp;&amp;target_area.has(e.target).length === 0)&#123;</div><div class="line">    some code....</div><div class="line">  &#125;</div><div class="line">&#125;)</div><div class="line">/*</div><div class="line"> 原理说明：</div><div class="line"> 1、事件对象不是目标区域</div><div class="line"> 2、事件对象不是目标区域的子元素</div><div class="line">*/</div></pre></td></tr></table></figure></p>
<p>作者 [李伟振]     </p>
]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[js中如何获取多个返回值]]></title>
      <url>https://wiestlee.github.io/2017/03/12/tags-%20%20%5BJavaScript%5D/</url>
      <content type="html"><![CDATA[<h3 id="在JS编程中，我们往往需要一个方法来返回一个或多个值，我们可以使用一下方法："><a href="#在JS编程中，我们往往需要一个方法来返回一个或多个值，我们可以使用一下方法：" class="headerlink" title="在JS编程中，我们往往需要一个方法来返回一个或多个值，我们可以使用一下方法："></a>在JS编程中，我们往往需要一个方法来返回一个或多个值，我们可以使用一下方法：</h3><h4 id="1、首先，如何接收一个返回值"><a href="#1、首先，如何接收一个返回值" class="headerlink" title="1、首先，如何接收一个返回值:"></a>1、首先，如何接收一个返回值:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">  function fun1()&#123;</div><div class="line">     var a = 6;</div><div class="line">     return a;</div><div class="line">  &#125;</div><div class="line">  function fun2()&#123;</div><div class="line">     var i = fun1();</div><div class="line">     console.log(i);</div><div class="line">  &#125;</div><div class="line">  fun2();//6</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h4 id="2、使用数组返回多个值："><a href="#2、使用数组返回多个值：" class="headerlink" title="2、使用数组返回多个值："></a>2、使用数组返回多个值：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">  function fun1()&#123;</div><div class="line">    var names = [&quot;jack&quot;,&quot;tom&quot;];</div><div class="line">    return names;</div><div class="line">  &#125;</div><div class="line">  function fun2()&#123;</div><div class="line">     var names = fun1();</div><div class="line">     console.log(names);</div><div class="line">     console.log(names[0]);</div><div class="line">  &#125;</div><div class="line">  function fun3()&#123;</div><div class="line">     var names = fun1();</div><div class="line">     console.log(names[0]);</div><div class="line">  &#125;</div><div class="line">  fun2()// [&quot;jack&quot;,&quot;tom&quot;] </div><div class="line">  fun3()// jack</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h4 id="3、使用json数据返回，如下"><a href="#3、使用json数据返回，如下" class="headerlink" title="3、使用json数据返回，如下"></a>3、使用json数据返回，如下</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">  function fun1()&#123;</div><div class="line">     var info  = &#123;&quot;name&quot;:&quot;jack&quot;,&quot;age&quot;:21&#125;;</div><div class="line">     return info;</div><div class="line">  &#125;</div><div class="line">  function fun2()&#123;</div><div class="line">     var info = fun1();</div><div class="line">     var name = info[&quot;name&quot;];</div><div class="line">     var age  = info[&quot;age&quot;];</div><div class="line">     console.log(`我的名字是:$&#123;name&#125;\n我的年龄是$&#123;age&#125;`);</div><div class="line">  &#125;</div><div class="line">  fun2();//我的名字是:jack</div><div class="line">         //我的年龄是21</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h4 id="4、使用对象的方式："><a href="#4、使用对象的方式：" class="headerlink" title="4、使用对象的方式："></a>4、使用对象的方式：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">function fun1()&#123;</div><div class="line">     var info  = &#123;</div><div class="line">         name:&quot;jack&quot;,</div><div class="line">         age:21</div><div class="line">         &#125;;</div><div class="line">     return info;</div><div class="line">  &#125;</div><div class="line">  function fun2()&#123;</div><div class="line">     var info = fun1();</div><div class="line">     var name = info.name;</div><div class="line">     var age  = info.age;</div><div class="line">     console.log(`我的名字是:$&#123;name&#125;\n我的年龄是$&#123;age&#125;`);</div><div class="line">  &#125;</div><div class="line">  fun2();//我的名字是:jack</div><div class="line">         //我的年龄是21</div></pre></td></tr></table></figure>
<p>作者 [李伟振]     </p>
]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[项目总结]]></title>
      <url>https://wiestlee.github.io/2017/02/28/tags-%20%20%5B%E6%8A%80%E6%9C%AF,%E6%80%BB%E7%BB%93%5D/</url>
      <content type="html"><![CDATA[<p>在历时四个月的学习中，自己在尝试着去做一个相对完整的项目，但是每一阶段都在经历着知识上的突破和技术的变革，残留的知识碎片在积累的越来越多，往往来不及整理，就开始了新的知识。想着在结束的时候整理一下，但是留下的坑有点多，导致每一个项目都不太完善，下面列举一下自己的项目并做下技术总结：</p>
<h2 id="项目列表"><a href="#项目列表" class="headerlink" title="项目列表"></a>项目列表</h2><blockquote>
<ul>
<li><a href="http://liweizhenapp.applinzi.com" target="_blank" rel="external">天猫商城</a></li>
<li>roseonly(一生只送一个人)</li>
<li>hovercamera 响应式首页</li>
<li><a href="http://roseonlyone.applinzi.com/" target="_blank" rel="external">roseonly 移动端APP</a></li>
</ul>
</blockquote>
<h2 id="项目介绍一、（pc端roseonly商城）"><a href="#项目介绍一、（pc端roseonly商城）" class="headerlink" title="项目介绍一、（pc端roseonly商城）"></a>项目介绍一、（pc端roseonly商城）</h2><p>roseonly，是一家网络花店，其定位是中国高端品牌花店，而该网站的一个特点是在该花店买花，“一生只送一人”。<br>用技术的角度去解释：它是一个商城类的购物网站，而该网站的需求是用户可以在在网站购买商品，但收货人只能填写一个，一个用户的ID一旦绑定一位收货人的姓名，确认后就无法修改，从而实现“一生只送一个人”。</p>
<h3 id="整站页面："><a href="#整站页面：" class="headerlink" title="整站页面："></a>整站页面：</h3><blockquote>
<ul>
<li>注册页面</li>
<li>首页  </li>
<li>产品列表页</li>
<li>产品详情页面</li>
<li>购物车页面</li>
<li>订单页面</li>
<li>支付页面（待完成）</li>
</ul>
</blockquote>
<h3 id="1、注册页面："><a href="#1、注册页面：" class="headerlink" title="1、注册页面："></a>1、注册页面：</h3><p>功能：ajax异步请求验证用户是否存在，用session存储技术实现随机验证码服务器端验证。更安全的保护用户信息。<br>1、绘制随机验证码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">/**</div><div class="line">*向客户端输出一个随机的验证码图片，同时在服务器保存该验证码</div><div class="line">*/</div><div class="line">header(&apos;Content-Type: image/png&apos;);</div><div class="line"></div><div class="line">$w = 75;</div><div class="line">$h = 22;</div><div class="line">//在服务器内存中创建一副图像</div><div class="line">$img = imagecreatetruecolor($w, $h);</div><div class="line">//分配一个随机颜色，作为背景颜色</div><div class="line">$c = imagecolorallocate($img, rand(200,200), rand(200,200),rand(200,200));</div><div class="line">//填充一个矩形，作为背景</div><div class="line">imagefilledrectangle($img, 0, 0, $w, $h, $c);</div><div class="line"></div><div class="line"></div><div class="line">//向图像上绘制四个随机的字符</div><div class="line">$src = &apos;ABCDEFGHJKLMNPQRSTWXY3456789&apos;;</div><div class="line">$code = &apos;&apos;;</div><div class="line">for($i=0; $i&lt;4; $i++)&#123;</div><div class="line">  $char = $src[rand(0, strlen($src)-1)];</div><div class="line">  $code .= $char;</div><div class="line">  $c = imagecolorallocate($img,rand(90,90),rand(90,90), rand(90,90));</div><div class="line">  //绘制一个旋转的随机字符，使用指定字体文件</div><div class="line">  $fontSize = rand(12, 18);</div><div class="line">  $angle = rand(-45, 45);</div><div class="line">  $x = 20*$i+5;</div><div class="line">  $y = rand(12, $h);</div><div class="line">  $fontFile = &apos;../font/simhei.ttf&apos;;</div><div class="line">  imagettftext($img,$fontSize,$angle,$x,$y,$c,$fontFile,$char);</div><div class="line">&#125;</div><div class="line"></div><div class="line">/*</div><div class="line">*验证码必须保存在服务器端，同时每个客户端的验证码彼此不同</div><div class="line">*存储中服务器端Session空间中</div><div class="line">*/</div><div class="line">//为当前客户端分配新的Session空间，或查找它已有的Session空间</div><div class="line">session_start();</div><div class="line">$_SESSION[&apos;RegisterVcode&apos;] = $code;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">//绘制5条随机干扰线</div><div class="line">for($i=0; $i&lt;0; $i++)&#123;</div><div class="line">  $c = imagecolorallocate($img,rand(0,255),rand(0,255),rand(0,255));</div><div class="line">  imageline($img, rand(0,$w), rand(0,$h), rand(0,$w), rand(0,$h),$c);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">//把服务器中的图像发送给客户端</div><div class="line">imagepng($img);</div><div class="line">//从服务器的内存中删除随机图片</div><div class="line">imagedestroy($img);</div></pre></td></tr></table></figure>
<p>2、验证随机验证码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line"> header(&quot;Content-Type:application/json;charset=utf8&quot;);</div><div class="line"> $phone=$_REQUEST[&apos;phone&apos;] or die(&apos;&#123;&quot;code&quot;:-2,&quot;msg&quot;:&quot;手机号不能为空&quot;&#125;&apos;);</div><div class="line"> $vCode=$_REQUEST[&apos;vCode&apos;]or die(&apos;&#123;&quot;code&quot;:-3,&quot;msg&quot;:&quot;请输入4位数字验证码&quot;&#125;&apos;);</div><div class="line"> $pwd=$_REQUEST[&apos;pwd&apos;] or die (&apos;&#123;&quot;code&quot;:-4,&quot;msg&quot;:&quot;请输入正确的密码&quot;&#125;&apos;);</div><div class="line"> require(&quot;init.php&quot;);</div><div class="line">  $sql=&quot;select phone from roseOnlyUser where phone=&apos;$phone&apos;&quot;;</div><div class="line">  mysqli_query($conn,$sql);</div><div class="line">  $result=mysqli_query($conn,$sql);</div><div class="line">  $rows=mysqli_fetch_row($result);</div><div class="line">   session_start();</div><div class="line"> if($rows&gt;0)&#123;</div><div class="line">  $output=[</div><div class="line">      &apos;code&apos;=&gt;-5,</div><div class="line">      &apos;msg&apos;=&gt;&apos;手机号已被注册&apos;,</div><div class="line">     ];</div><div class="line">     echo json_encode($output);</div><div class="line"> &#125;</div><div class="line"> if($vCode!=$_SESSION[&apos;RegisterVcode&apos;])&#123;</div><div class="line">   $output=[</div><div class="line">      &apos;code&apos;=&gt;-6,</div><div class="line">      &apos;msg&apos;=&gt;&apos;验证码错误&apos;</div><div class="line">   ];</div><div class="line">   echo json_encode($output);</div><div class="line"> &#125;</div><div class="line"></div><div class="line"> else&#123;</div><div class="line">  $sql=&quot;insert into roseOnlyUser values(null,&apos;$phone&apos;,&apos;$pwd&apos;)&quot;;</div><div class="line">  mysqli_query($conn,$sql);</div><div class="line">  $uid=mysqli_insert_id($conn);</div><div class="line">     $output=[</div><div class="line">      &apos;code&apos;=&gt;1,</div><div class="line">      &apos;msg&apos;=&gt;&apos;新用户添加成功&apos;,</div><div class="line">      &apos;uid&apos;=&gt;$uid</div><div class="line">     ];</div><div class="line">     echo json_encode($output);</div><div class="line">   &#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<p>3、最后客户端进行ajax异步验证（这里不在赘述代码）<br>4、验证通过后向数据库插入一条用户数据。</p>
<h3 id="2、登录页面"><a href="#2、登录页面" class="headerlink" title="2、登录页面"></a>2、登录页面</h3><ol>
<li>通过用户手机号和用户密码向数据库查找用户信息<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$sql = &quot;SELECT * FROM roseOnlyUser WHERE phone=&apos;$phone&apos; AND pwd=&apos;$pwd&apos;&quot;;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>2、使用sessionStorage，保存用户的手机号/用户名到本地<br>3、异步加载页面的头部，假如本地存在用户的登录信息，就修改加载的头部，把用户的信息添加上去，添加退出登录按钮,清除本地的的回话储存。因为每个页面都要使用这个功能，所以我把这一段js代码直接写在了要异步加载的请求头部中，也就是PHP的header部分。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sessionStorage.clear();</div></pre></td></tr></table></figure></p>
<h2 id="解决问题："><a href="#解决问题：" class="headerlink" title="解决问题："></a>解决问题：</h2><p>如何清除谷歌浏览器的自动填充表单的黄色背景：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">input:-webkit-autofill &#123;</div><div class="line">    -webkit-box-shadow: 0 0 0 1000px white inset !important;</div><div class="line">&#125;         //实现颜色可以自定义更改</div></pre></td></tr></table></figure></p>
<h3 id="3、首页"><a href="#3、首页" class="headerlink" title="3、首页"></a>3、首页</h3><p>功能：轮播图，选项卡的自动切换和手动切换。<br>1、轮播：点击条状按钮，获取index值，用index*1240px（图片的宽度），来改变的图片的位移，向右为正，想左为负，然后用一个定时器，来调整index的值，每两秒钟让index+1，当hover时候清除定时器，否则，调用自动轮播的函数。<br>2、选项卡切换：自动轮播同上</p>
<h3 id="4、产品列表页"><a href="#4、产品列表页" class="headerlink" title="4、产品列表页"></a>4、产品列表页</h3><p>功能：异步数据加载产品数据，实现按照价格排序，区间排序。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$sql=&apos;SELECT * FORM roseList ORDER BY rosePrice&apos;;//价格升序</div><div class="line">$sql=&apos;SELECT * FROM roseList ORDER BY rosePrice DESC&apos;; //价格降序</div><div class="line">$sql=&quot;SELECT * FROM roseList WHERE roesPrice BETWEEN start=&apos;$start&apos; and end=&apos;$end&apos;&quot;;//区间排序</div></pre></td></tr></table></figure></p>
<h3 id="5、产品详情页面"><a href="#5、产品详情页面" class="headerlink" title="5、产品详情页面"></a>5、产品详情页面</h3><p>功能：点击切换产品图片，并动态加载产品详情，当滚动到产品详情的位置时，才进行请求数据。<br>1、代码示例：通过判断子节点的长度为0的时候才进行，避免的重复请求。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$(window).on(&apos;scroll&apos;,function()&#123;</div><div class="line">  if($(&apos;body&apos;).scrollTop()&gt;400&amp;&amp;$(&apos;.details_img&apos;).children().length==0)&#123;</div><div class="line">    $.ajax(&#123;...&#125;)</div><div class="line">&#125;&#125;</div></pre></td></tr></table></figure></p>
<h3 id="6、购物车页面"><a href="#6、购物车页面" class="headerlink" title="6、购物车页面"></a>6、购物车页面</h3><p>功能：购物车的增删改查功能。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$sql=&quot;insert into rose_cart_detail values(null,&apos;$cartId&apos;,&apos;$productId&apos;,1)&quot;;</div><div class="line">$sql=&quot;delete from rose_cart_detail where productId=&apos;$productId&apos;&quot;;</div><div class="line">$sql=&quot;update rose_cart_detail set count=$count where productId=&apos;$productId&apos;&quot;;</div></pre></td></tr></table></figure></p>
<h3 id="7、订单页面"><a href="#7、订单页面" class="headerlink" title="7、订单页面"></a>7、订单页面</h3><h4 id="功能：提交用户的购买信息，完成收货人提交后无法更改功能（表单禁用）。"><a href="#功能：提交用户的购买信息，完成收货人提交后无法更改功能（表单禁用）。" class="headerlink" title="功能：提交用户的购买信息，完成收货人提交后无法更改功能（表单禁用）。"></a>功能：提交用户的购买信息，完成收货人提交后无法更改功能（表单禁用）。</h4><p>1、当查询到数据库存在该用户曾经提交过收货人的信息时，表单始终为禁用状态。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(this).attr(&quot;disabled&quot;,&quot;disabled&quot;);</div></pre></td></tr></table></figure></p>
<blockquote>
<ul>
<li>支付页面（待完成）</li>
</ul>
</blockquote>
<p>作者 [李伟振]<br>2017 年 02月 28日    </p>
]]></content>
      
        
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> 总结 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[回顾我的2016]]></title>
      <url>https://wiestlee.github.io/2017/02/02/2/</url>
      <content type="html"><![CDATA[<p>回想我过去的一年，对我来说还是比较特别的，“特别”在对自己有了一些严格的要求，并开始学会慢慢的去规划自己的生活，给自己订一些小目标，当然，这一切都源于对于未来的恐惧与不安。废话不说，下面列举一下</p>
<h3 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h3><blockquote>
<ul>
<li>整理知识，学习笔记</li>
<li>发布日记，杂文，所见所想</li>
<li>撰写发布技术文稿（代码支持）</li>
<li>撰写发布学术论文（LaTeX 公式支持）</li>
</ul>
</blockquote>
<p><img src="https://www.zybuluo.com/static/img/logo.png" alt="cmd-markdown-logo"></p>
<p>除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：</p>
<h3 id="Windows-Mac-Linux-全平台客户端"><a href="#Windows-Mac-Linux-全平台客户端" class="headerlink" title="Windows/Mac/Linux 全平台客户端"></a><a href="https://www.zybuluo.com/cmd/" target="_blank" rel="external">Windows/Mac/Linux 全平台客户端</a></h3><blockquote>
<p>请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 <i class="icon-file"></i> <strong>新文稿</strong> 或者使用快捷键 <code>Ctrl+Alt+N</code>。</p>
</blockquote>
<hr>
<h2 id="什么是-Markdown"><a href="#什么是-Markdown" class="headerlink" title="什么是 Markdown"></a>什么是 Markdown</h2><p>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong> 或者 <em>斜体</em> 某些文字，更棒的是，它还可以</p>
<h3 id="1-制作一份待办事宜-Todo-列表"><a href="#1-制作一份待办事宜-Todo-列表" class="headerlink" title="1. 制作一份待办事宜 Todo 列表"></a>1. 制作一份待办事宜 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#13-待办事宜-todo-列表" target="_blank" rel="external">Todo 列表</a></h3><ul>
<li>[ ] 支持以 PDF 格式导出文稿</li>
<li>[ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li>
<li>[x] 新增 Todo 列表功能</li>
<li>[x] 修复 LaTex 公式渲染问题</li>
<li>[x] 新增 LaTex 公式编号功能</li>
</ul>
<h3 id="2-书写一个质能守恒公式-LaTeX"><a href="#2-书写一个质能守恒公式-LaTeX" class="headerlink" title="2. 书写一个质能守恒公式[^LaTeX]"></a>2. 书写一个质能守恒公式[^LaTeX]</h3><p>$$E=mc^2$$</p>
<h3 id="3-高亮一段代码-code"><a href="#3-高亮一段代码-code" class="headerlink" title="3. 高亮一段代码[^code]"></a>3. 高亮一段代码[^code]</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@requires_authorization</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></div><div class="line">    <span class="keyword">pass</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    <span class="comment"># A comment</span></div><div class="line">    <span class="keyword">print</span> <span class="string">'hello world'</span></div></pre></td></tr></table></figure>
<h3 id="4-高效绘制-流程图"><a href="#4-高效绘制-流程图" class="headerlink" title="4. 高效绘制 流程图"></a>4. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-流程图" target="_blank" rel="external">流程图</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">st=&gt;start: Start</div><div class="line">op=&gt;operation: Your Operation</div><div class="line">cond=&gt;condition: Yes or No?</div><div class="line">e=&gt;end</div><div class="line"></div><div class="line">st-&gt;op-&gt;cond</div><div class="line">cond(yes)-&gt;e</div><div class="line">cond(no)-&gt;op</div></pre></td></tr></table></figure>
<h3 id="5-高效绘制-序列图"><a href="#5-高效绘制-序列图" class="headerlink" title="5. 高效绘制 序列图"></a>5. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-序列图" target="_blank" rel="external">序列图</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Alice-&gt;Bob: Hello Bob, how are you?</div><div class="line">Note right of Bob: Bob thinks</div><div class="line">Bob--&gt;Alice: I am good thanks!</div></pre></td></tr></table></figure>
<h3 id="6-高效绘制-甘特图"><a href="#6-高效绘制-甘特图" class="headerlink" title="6. 高效绘制 甘特图"></a>6. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#9-甘特图" target="_blank" rel="external">甘特图</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">title 项目开发流程</div><div class="line">section 项目确定</div><div class="line">    需求分析       :a1, 2016-06-22, 3d</div><div class="line">    可行性报告     :after a1, 5d</div><div class="line">    概念验证       : 5d</div><div class="line">section 项目实施</div><div class="line">    概要设计      :2016-07-05  , 5d</div><div class="line">    详细设计      :2016-07-08, 10d</div><div class="line">    编码          :2016-07-15, 10d</div><div class="line">    测试          :2016-07-22, 5d</div><div class="line">section 发布验收</div><div class="line">    发布: 2d</div><div class="line">    验收: 3d</div></pre></td></tr></table></figure>
<h3 id="7-绘制表格"><a href="#7-绘制表格" class="headerlink" title="7. 绘制表格"></a>7. 绘制表格</h3><table>
<thead>
<tr>
<th>项目</th>
<th style="text-align:right">价格</th>
<th style="text-align:center">数量</th>
</tr>
</thead>
<tbody>
<tr>
<td>计算机</td>
<td style="text-align:right">\$1600</td>
<td style="text-align:center">5</td>
</tr>
<tr>
<td>手机</td>
<td style="text-align:right">\$12</td>
<td style="text-align:center">12</td>
</tr>
<tr>
<td>管线</td>
<td style="text-align:right">\$1</td>
<td style="text-align:center">234</td>
</tr>
</tbody>
</table>
<h3 id="8-更详细语法说明"><a href="#8-更详细语法说明" class="headerlink" title="8. 更详细语法说明"></a>8. 更详细语法说明</h3><p>想要查看更详细的语法说明，可以参考我们准备的 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown" target="_blank" rel="external">Cmd Markdown 简明语法手册</a>，进阶用户可以参考 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-高阶语法手册" target="_blank" rel="external">Cmd Markdown 高阶语法手册</a> 了解更多高级功能。</p>
<p>总而言之，不同于其它 <em>所见即所得</em> 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。<strong>Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。</strong> 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。</p>
<hr>
<h2 id="什么是-Cmd-Markdown"><a href="#什么是-Cmd-Markdown" class="headerlink" title="什么是 Cmd Markdown"></a>什么是 Cmd Markdown</h2><p>您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 <strong>编辑/发布/阅读</strong> Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。</p>
<h3 id="1-实时同步预览"><a href="#1-实时同步预览" class="headerlink" title="1. 实时同步预览"></a>1. 实时同步预览</h3><p>我们将 Cmd Markdown 的主界面一分为二，左边为<strong>编辑区</strong>，右边为<strong>预览区</strong>，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！</p>
<h3 id="2-编辑工具栏"><a href="#2-编辑工具栏" class="headerlink" title="2. 编辑工具栏"></a>2. 编辑工具栏</h3><p>也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 <strong>编辑区</strong> 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。</p>
<p><img src="https://www.zybuluo.com/static/img/toolbar-editor.png" alt="tool-editor"></p>
<h3 id="3-编辑模式"><a href="#3-编辑模式" class="headerlink" title="3. 编辑模式"></a>3. 编辑模式</h3><p>完全心无旁骛的方式编辑文字：点击 <strong>编辑工具栏</strong> 最右侧的拉伸按钮或者按下 <code>Ctrl + M</code>，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！</p>
<h3 id="4-实时的云端文稿"><a href="#4-实时的云端文稿" class="headerlink" title="4. 实时的云端文稿"></a>4. 实时的云端文稿</h3><p>为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 <strong>编辑工具栏</strong> 的最右侧提示 <code>已保存</code> 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。</p>
<h3 id="5-离线模式"><a href="#5-离线模式" class="headerlink" title="5. 离线模式"></a>5. 离线模式</h3><p>在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。</p>
<h3 id="6-管理工具栏"><a href="#6-管理工具栏" class="headerlink" title="6. 管理工具栏"></a>6. 管理工具栏</h3><p>为了便于管理您的文稿，在 <strong>预览区</strong> 的顶部放置了如下所示的 <strong>管理工具栏</strong>：</p>
<p><img src="https://www.zybuluo.com/static/img/toolbar-manager.jpg" alt="tool-manager"></p>
<p>通过管理工具栏可以：</p>
<p><i class="icon-share"></i> 发布：将当前的文稿生成固定链接，在网络上发布，分享<br><i class="icon-file"></i> 新建：开始撰写一篇新的文稿<br><i class="icon-trash"></i> 删除：删除当前的文稿<br><i class="icon-cloud"></i> 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地<br><i class="icon-reorder"></i> 列表：所有新增和过往的文稿都可以在这里查看、操作<br><i class="icon-pencil"></i> 模式：切换 普通/Vim/Emacs 编辑模式</p>
<h3 id="7-阅读工具栏"><a href="#7-阅读工具栏" class="headerlink" title="7. 阅读工具栏"></a>7. 阅读工具栏</h3><p><img src="https://www.zybuluo.com/static/img/toolbar-reader.jpg" alt="tool-manager"></p>
<p>通过 <strong>预览区</strong> 右上角的 <strong>阅读工具栏</strong>，可以查看当前文稿的目录并增强阅读体验。</p>
<p>工具栏上的五个图标依次为：</p>
<p><i class="icon-list"></i> 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落<br><i class="icon-chevron-sign-left"></i> 视图：互换左边编辑区和右边预览区的位置<br><i class="icon-adjust"></i> 主题：内置了黑白两种模式的主题，试试 <strong>黑色主题</strong>，超炫！<br><i class="icon-desktop"></i> 阅读：心无旁骛的阅读模式提供超一流的阅读体验<br><i class="icon-fullscreen"></i> 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境</p>
<h3 id="8-阅读模式"><a href="#8-阅读模式" class="headerlink" title="8. 阅读模式"></a>8. 阅读模式</h3><p>在 <strong>阅读工具栏</strong> 点击 <i class="icon-desktop"></i> 或者按下 <code>Ctrl+Alt+M</code> 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。</p>
<h3 id="9-标签、分类和搜索"><a href="#9-标签、分类和搜索" class="headerlink" title="9. 标签、分类和搜索"></a>9. 标签、分类和搜索</h3><p>在编辑区任意行首位置输入以下格式的文字可以标签当前文档：</p>
<p>标签： 未分类</p>
<p>标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示：</p>
<p><img src="https://www.zybuluo.com/static/img/file-list.png" alt="file-list"></p>
<h3 id="10-文稿发布和分享"><a href="#10-文稿发布和分享" class="headerlink" title="10. 文稿发布和分享"></a>10. 文稿发布和分享</h3><p>在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 <i class="icon-share"></i> (Ctrl+Alt+P) 发布这份文档给好友吧！</p>
<hr>
<p>再一次感谢您花费时间阅读这份欢迎稿，点击 <i class="icon-file"></i> (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！</p>
<p>作者 <a href="http://weibo.com/ghosert" target="_blank" rel="external">@ghosert</a><br>2016 年 07月 07日    </p>
<p>[^LaTeX]: 支持 <strong>LaTeX</strong> 编辑显示支持，例如：$\sum_{i=1}^n a_i=0$， 访问 <a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="external">MathJax</a> 参考更多使用方法。</p>
<p>[^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，<strong>四十一</strong>种主流编程语言。</p>
]]></content>
      
        
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>https://wiestlee.github.io/2017/01/22/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[读书]]></title>
      <url>https://wiestlee.github.io/reading/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[关于]]></title>
      <url>https://wiestlee.github.io/about/index.html</url>
      <content type="html"><![CDATA[<p>大家好，我是李伟振。欢迎来到我的个人技术博客。</p>
]]></content>
    </entry>
    
  
</search>
